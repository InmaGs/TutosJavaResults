<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC
"-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"
"http://struts.apache.org/dtds/struts-2.0.dtd">
<struts>
    <constant name="struts.devMode" value="true" />
    <constant name="struts.configuration.xml.reload" value="true" />
    
    <package name="struts-results" extends="struts-default">
        <action name="index">
            <result>/index.jsp</result>
        </action>
        <!--Añadimos un action para el ejercicio 1: dispatcher. -->
        <action name="dispatcher" class="com.javatutoriales.results.actions.DispatcherResultAction">
            <!-- Definimos los results correspondientes: -->
            <result name="success" type="dispatcher">
                <param name="location">/dispatcher/exito.jsp</param>
            </result>
            <result name="error" type="dispatcher">
                <param name="location">/dispatcher/error.jsp</param>
            </result>
            <!-- Como location es el parámetro por defecto del tipo de error dispatcher, se puede
                simplificar: <result name="success" type="dispatcher">/dispatcher/exito.jsp</result>
                y como dispatcher es el tipo por defecto del tipo de result, entonces finalmente 
                quedaría: <result name="success">/dispatcher/exito.jsp</result>-->
            <!-- También se puede usar un parámetro para obtener la dirección a la que reenviar
                la petición del usuario: <result name="error">${ubicacion}</result>. Para obtener
                esta dirección habría que añadir un getter a la clase:
                public String getUbicacion(){return "/pagina.jsp";}-->
        </action>
        <!-- Añadimos un action para el ejercicio 2: redirect. -->
        <action name="redirect" class="com.javatutoriales.results.actions.RedirectResultAction">
            <!-- Agregamos el resultado, cuyo parámetro por defecto es location y se puede dejar: -->
            <result type="redirect">/dispatcher/index.jsp</result>
        </action>
        <!-- Añadimos action para redirect externo -->
        <action name="redirect-externo" class="com.javatutoriales.results.actions.RedirectExternoResultAction">
            <result type="redirect">http://www.javatutoriales.com/2011/10/struts-2-parte-3-trabajo-con.htm</result>
        </action>
        <!-- Acción de redirección a otro action -->
        <action name="redirect-action" class="com.javatutoriales.results.actions.RedirectAccionAction">
            <result type="redirectAction">
            <!-- Como la página a la que se redirecciona a través del action, ha de recibir un
                nombre y un lenguaje de programación, entonces añadimos parámetros al resultado.-->
                <param name="actionName">dispatcher</param>
                <param name="nombre">Nombre</param> 
                <!-- El parámetro anterior se define de forma estática, pero podría ser dinámica, 
                    como en el caso el siguiente, para lo que hay que añadir un getter en la clase-->
                <param name="lenguaje">${lenguajeProgramación}</param>
            </result>
        </action>
        <!-- Acciónes para el ejercicio de chain. En este caso son acciones "ficticias", pero 
            normalmente son cadenas de acciones reales-->
        <action name="chain">
            <result type="chain">chain2</result>
        </action>
        <action name="chain2">
            <result type="chain">chain3</result>
        </action>
        <action name="chain3">
            <result type="chain">redirect-externo</result>
        </action>
        <!-- Se añade el action del apartado de stream para la obtencion de imágenes.
            En este caso hay que especificar los parámetros, ya que no tiene nada por 
            defecto -->
        <action name="stream" class="com.javatutoriales.results.actions.StreamResultAction">
            <result type="stream">
                <param name="contentType">image/png</param>
                <param name="contentLength">${bytesArchivo}</param>
                <param name="inputName">streamImagen</param>
                <param name="contentDisposition">attachment;filename=${nombreImagen}</param>
            </result>
        </action>
        <!-- Declaración del action del apartado plaintext -->
        <action name="plaintext" class="com.javatutoriales.results.actions.PlainTextResultAction">
            <result type="plainText">
                <param name="location">/plaintext/pagina.html</param>
                <param name="charSET">UTF-8</param>
            </result>                
        </action>
        <!-- Creación del action de headers. En este caso se crea para el error 301,
            que ocurre cuando una página ha sido movida permanentemente de su
            ubicación original (no es exactamente un error, ya que la petición se hace
            correctamente). Con el parámetro location, se asigna la nueva localización
            y redirecciona hacia la dirección indicada-->
        <action name="httpstatus301">
            <result type="httpheader">
                <param name="status">301</param>
                <param name="headers.Location">http://www.javatutoriales.com/</param>
            </result>
        </action>
        <!-- Action para error 400, que es de cliente. No requiere clase -->
        <action name="httpstatus400">
            <result type="httpheader">
                <param name="error">400</param>
                <param name="errorMessage">
                    Los datos proporcionados no pueden ser entendidos. Compruebe la 
                    sintaxis o use otro navegador.
                </param>
            </result>
        </action>
    </package>
</struts>
